@model DTO.UserDTO

<div class="box-body">

    <div class="form-group">
        <label>User Name</label>
        @Html.TextBoxFor(x => x.Username, new
        {
            @class = "form-control",
                    @placeholder = "User Name"
        })
        @Html.ValidationMessageFor(x => x.Username)
    </div>
    <div class="form-group">
        <label>Password</label>
        @Html.TextBoxFor(x => x.Password, new
        {
            @class = "form-control",
                    @placeholder = "Password"
        })
        @Html.ValidationMessageFor(x => x.Password)
    </div>

    @if (DTO.UserStatic.isAdmin) 
    {
        <div class="form-check">
            <input type="checkbox" class="form-check-input"
           id="exampleCheck1" name="isAdmin" checked="@Model.isAdmin"
           value="true">
            <label class="form-check-label">Is Admin</label>
        </div>
    }
    

    <div class="form-group">
        @Html.LabelFor(x => x.userImage)
        <input type="file" name="userImage"
               accept="image/gif, image/jpeg, image/png, image/jpg"
               onchange="$('#UserImage')[0].src = window.URL.createObjectURL(this.files[0])" />
        <br />
        <!--Model!=null - means we are on update page-->
        <!--else we are on add page (Model is null)-->
        @if (Model != null && Model.ImagePath != null)
        {
            <br />
            <img src="~/Areas/Admin/Content/UserImage/@Model.ImagePath" width="300" height="200" />
        }

        else
        {
            <img src="" width="300" height="200" id="UserImage" />
        }
    </div>

    <div class="form-group">
        <label>Name</label>
        @Html.TextBoxFor(x => x.Name, new
        {
            @class = "form-control",
                    @placeholder = "Name"
        })
        @Html.ValidationMessageFor(x => x.Name)
    </div>

    <div class="form-group">
        <label>Email</label>
        @Html.TextBoxFor(x => x.Email, new
        {
            @class = "form-control",
                    @placeholder = "Email"
        })
        @Html.ValidationMessageFor(x => x.Email)
    </div>

    <input type="number" name="MetaID" value="@Model.ID" hidden />

    <div class="card-footer">
        <button type="submit" class="btn btn-primary">Save</button>
    </div>





</div>

